{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/projectWallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FormWallet from '../components/FormWallet';\nimport '../css/main.css';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.sumTotal = this.sumTotal.bind(this);\n  }\n\n  sumTotal() {\n    let sum = 0;\n    const {\n      convertValue\n    } = this.props;\n    convertValue.forEach(item => {\n      const {\n        value,\n        currency,\n        exchangeRates\n      } = item;\n\n      if (exchangeRates[currency]) {\n        sum += Number(value) * Number(exchangeRates[currency].ask);\n        return sum;\n      }\n\n      return sum;\n    });\n    return sum.toFixed(2);\n  }\n\n  render() {\n    const {\n      emailValue\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header-wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      className: \"email-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, emailValue), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      className: \"sum-total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, this.sumTotal()), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      className: \"sum-total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"BRL\")), /*#__PURE__*/React.createElement(FormWallet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nWallet.propTypes = {\n  convertValue: PropTypes.shape({\n    forEach: PropTypes.func\n  }).isRequired,\n  emailValue: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  emailValue: state.user.email,\n  convertValue: state.wallet.expenses\n});\n\nexport default connect(mapStateToProps, null)(Wallet);","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/projectWallet/src/pages/Wallet.js"],"names":["React","connect","PropTypes","FormWallet","Wallet","Component","constructor","sumTotal","bind","sum","convertValue","props","forEach","item","value","currency","exchangeRates","Number","ask","toFixed","render","emailValue","propTypes","shape","func","isRequired","string","mapStateToProps","state","user","email","wallet","expenses"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,iBAAP;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,GAAG;AACT,QAAIE,GAAG,GAAG,CAAV;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AACAD,IAAAA,YAAY,CAACE,OAAb,CAAsBC,IAAD,IAAU;AAC7B,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,QAAT;AAAmBC,QAAAA;AAAnB,UAAqCH,IAA3C;;AACA,UAAIG,aAAa,CAACD,QAAD,CAAjB,EAA6B;AAC3BN,QAAAA,GAAG,IAAIQ,MAAM,CAACH,KAAD,CAAN,GAAgBG,MAAM,CAACD,aAAa,CAACD,QAAD,CAAb,CAAwBG,GAAzB,CAA7B;AACA,eAAOT,GAAP;AACD;;AAAC,aAAOA,GAAP;AACH,KAND;AAOA,WAAOA,GAAG,CAACU,OAAJ,CAAY,CAAZ,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKV,KAA5B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAM,qBAAY,aAAlB;AAAgC,MAAA,SAAS,EAAC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DU,UAA1D,CAFF,eAGE;AAAM,qBAAY,aAAlB;AAAgC,MAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwD,KAAKd,QAAL,EAAxD,CAHF,eAIE;AAAM,qBAAY,uBAAlB;AAA0C,MAAA,SAAS,EAAC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF,eAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AAjCkC;;AAoCrCH,MAAM,CAACkB,SAAP,GAAmB;AACjBZ,EAAAA,YAAY,EAAER,SAAS,CAACqB,KAAV,CAAgB;AAC5BX,IAAAA,OAAO,EAAEV,SAAS,CAACsB;AADS,GAAhB,EAEXC,UAHc;AAIjBJ,EAAAA,UAAU,EAAEnB,SAAS,CAACwB,MAAV,CAAiBD;AAJZ,CAAnB;;AAOA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,UAAU,EAAEO,KAAK,CAACC,IAAN,CAAWC,KADW;AAElCpB,EAAAA,YAAY,EAAEkB,KAAK,CAACG,MAAN,CAAaC;AAFO,CAAZ,CAAxB;;AAKA,eAAe/B,OAAO,CAAC0B,eAAD,EAAkB,IAAlB,CAAP,CAA+BvB,MAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FormWallet from '../components/FormWallet';\nimport '../css/main.css';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.sumTotal = this.sumTotal.bind(this);\n  }\n\n  sumTotal() {\n    let sum = 0;\n    const { convertValue } = this.props;\n    convertValue.forEach((item) => {\n      const { value, currency, exchangeRates } = item;\n      if (exchangeRates[currency]) {\n        sum += Number(value) * Number(exchangeRates[currency].ask);\n        return sum;\n      } return sum;\n    });\n    return sum.toFixed(2);\n  }\n\n  render() {\n    const { emailValue } = this.props;\n    return (\n      <div>\n        <header className=\"header-wallet\">\n          {/* <img src={ require('./gifWallet.gif') } alt=\"wallet\" className=\"wallet-header\" /> */}\n          <span data-testid=\"email-field\" className=\"email-value\">{ emailValue }</span>\n          <span data-testid=\"total-field\" className=\"sum-total\">{ this.sumTotal() }</span>\n          <span data-testid=\"header-currency-field\" className=\"sum-total\">BRL</span>\n        </header>\n        <FormWallet />\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  convertValue: PropTypes.shape({\n    forEach: PropTypes.func,\n  }).isRequired,\n  emailValue: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  emailValue: state.user.email,\n  convertValue: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, null)(Wallet);\n"]},"metadata":{},"sourceType":"module"}