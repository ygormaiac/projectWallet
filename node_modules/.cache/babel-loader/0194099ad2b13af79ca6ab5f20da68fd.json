{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/sd-013-a-project-trybewallet/src/components/FormWallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { convertValue, savedChanges, valueCambio } from '../actions';\nimport ButtonAdd from './ButtonAdd';\n\nclass FormWallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onSavedAdd = this.onSavedAdd.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      fetchAPI\n    } = this.props;\n    fetchAPI();\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      id,\n      value\n    } = target;\n    this.setState({\n      [id]: value\n    });\n  } // Adicionando as despesas no store com o click do botÃ£o\n\n\n  onSavedAdd() {\n    const {\n      expenses,\n      addChange\n    } = this.props;\n    const newExpense = { ...this.state,\n      id: expenses.length\n    };\n    addChange(newExpense);\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const arrayCurrencies = Object.keys(currencies);\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Valor\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"value\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"currency\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, arrayCurrencies.map((state, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: arrayCurrencies[index],\n      value: arrayCurrencies[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, arrayCurrencies[index])))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"method\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Tag\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(ButtonAdd, {\n      onClick: this.onSavedAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nFormWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.objectOf(PropTypes.func).isRequired\n};\n\nconst mapStateToProps = state => ({\n  currencies: state.walletReducer.currencies,\n  expenses: state.walletReducer.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAPI: wallet => dispatch(valueCambio(wallet)),\n  addChange: stateTotal => dispatch(convertValue(stateTotal))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/sd-013-a-project-trybewallet/src/components/FormWallet.js"],"names":["React","connect","PropTypes","convertValue","savedChanges","valueCambio","ButtonAdd","FormWallet","Component","constructor","state","id","value","description","currency","method","tag","handleChange","bind","onSavedAdd","componentDidMount","fetchAPI","props","target","setState","expenses","addChange","newExpense","length","render","currencies","arrayCurrencies","Object","keys","map","index","propTypes","func","isRequired","objectOf","mapStateToProps","walletReducer","mapDispatchToProps","dispatch","wallet","stateTotal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { convertValue, savedChanges, valueCambio } from '../actions';\nimport ButtonAdd from './ButtonAdd';\n\nclass FormWallet extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n        id: 0,\n        value: '',\n        description: '',\n        currency: '',\n        method: '',\n        tag: '',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.onSavedAdd = this.onSavedAdd.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchAPI } = this.props;\n    fetchAPI();\n  }\n\n  handleChange({ target }) {\n    const { id, value } = target;\n    this.setState({ [id]: value });\n  }\n\n  // Adicionando as despesas no store com o click do botÃ£o\n  onSavedAdd() {\n    const { expenses, addChange } = this.props;\n    const newExpense = ({ ...this.state, id: expenses.length });\n    addChange(newExpense);\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const arrayCurrencies = Object.keys(currencies);\n\n    return (\n      <form>\n        <label htmlFor=\"value\">\n          Valor\n          <input type=\"text\" id=\"value\" onChange={ this.handleChange } />\n        </label>\n        <label htmlFor=\"description\">\n          DescriÃ§Ã£o\n          <input type=\"text\" id=\"description\" onChange={ this.handleChange } />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda\n          <select id=\"currency\" onChange={ this.handleChange }>\n            {arrayCurrencies.map((state, index) => (\n              <option\n                key={ arrayCurrencies[index] }\n                value={ arrayCurrencies[index] }\n              >\n                { arrayCurrencies[index] }\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          MÃ©todo de pagamento\n          <select id=\"method\" onChange={ this.handleChange }>\n            <option>Dinheiro</option>\n            <option>CartÃ£o de crÃ©dito</option>\n            <option>CartÃ£o de dÃ©bito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag\n          <select id=\"tag\" onChange={ this.handleChange }>\n            <option>AlimentaÃ§Ã£o</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>SaÃºde</option>\n          </select>\n        </label>\n        <ButtonAdd onClick={ this.onSavedAdd } />\n      </form>\n    );\n  }\n}\n\nFormWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.objectOf(PropTypes.func).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  currencies: state.walletReducer.currencies,\n  expenses: state.walletReducer.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: (wallet) => dispatch(valueCambio(wallet)),\n  addChange: (stateTotal) => dispatch(convertValue(stateTotal)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\n"]},"metadata":{},"sourceType":"module"}