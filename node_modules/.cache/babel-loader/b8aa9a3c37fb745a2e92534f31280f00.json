{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/sd-013-a-project-trybewallet/src/components/FormWallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { valueCambio } from '../actions';\nimport ButtonAdd from './ButtonAdd';\n\nclass FormWallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      expenses: {\n        id: 0,\n        value: '',\n        description: '',\n        currency: '',\n        method: '',\n        tag: '',\n        exchangeRates: {}\n      }\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      id,\n      value\n    } = target;\n    this.setState({\n      [id]: value\n    });\n  }\n\n  componentDidMount() {\n    const {\n      fetchAPI\n    } = this.props;\n    fetchAPI();\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const arrayCurrencies = Object.keys(currencies);\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Valor\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"value\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"currency\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, arrayCurrencies.map((state, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: arrayCurrencies[index],\n      value: arrayCurrencies[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, arrayCurrencies[index])))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"method\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Tag\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(ButtonAdd, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nFormWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape({}).isRequired\n};\n\nconst mapStateToProps = state => ({\n  currencies: state.walletReducer.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAPI: wallet => dispatch(valueCambio(wallet))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/sd-013-a-project-trybewallet/src/components/FormWallet.js"],"names":["React","connect","PropTypes","valueCambio","ButtonAdd","FormWallet","Component","constructor","state","expenses","id","value","description","currency","method","tag","exchangeRates","handleChange","target","setState","componentDidMount","fetchAPI","props","render","currencies","arrayCurrencies","Object","keys","map","index","propTypes","func","isRequired","shape","mapStateToProps","walletReducer","mapDispatchToProps","dispatch","wallet"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { valueCambio } from '../actions';\nimport ButtonAdd from './ButtonAdd';\n\nclass FormWallet extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      expenses: {\n        id: 0,\n        value: '',\n        description: '',\n        currency: '',\n        method: '',\n        tag: '',\n        exchangeRates: {},\n      }\n    }\n  }\n\n  handleChange({ target }) {\n    const { id, value } = target;\n    this.setState({ [id]: value });\n  }\n\n  componentDidMount() {\n    const { fetchAPI } = this.props;\n    fetchAPI();\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const arrayCurrencies = Object.keys(currencies);\n\n    return (\n      <form>\n        <label htmlFor=\"value\">\n          Valor\n          <input type=\"text\" id=\"value\" onChange={ this.handleChange } />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição\n          <input type=\"text\" id=\"description\" onChange={ this.handleChange } />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda\n          <select id=\"currency\" onChange={ this.handleChange }>\n            {arrayCurrencies.map((state, index) => (\n              <option\n                key={ arrayCurrencies[index] }\n                value={ arrayCurrencies[index] }\n              >\n                { arrayCurrencies[index] }\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de pagamento\n          <select id=\"method\" onChange={ this.handleChange }>\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag\n          <select id=\"tag\" onChange={ this.handleChange }>\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n        <ButtonAdd />\n      </form>\n    );\n  }\n}\n\nFormWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape({}).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  currencies: state.walletReducer.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: (wallet) => dispatch(valueCambio(wallet)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\n"]},"metadata":{},"sourceType":"module"}