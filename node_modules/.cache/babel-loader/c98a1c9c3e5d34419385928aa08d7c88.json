{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/projectWallet/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { saveEmail, saveImage } from '../actions';\nimport '../css/main.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      img: ''\n    };\n    this.onSubmitLogin = this.onSubmitLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onSubmitLogin() {\n    const {\n      history,\n      getEmail\n    } = this.props;\n    const {\n      email,\n      img\n    } = this.state;\n    getEmail(email);\n    history.push('/carteira');\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const passwordLength = 6;\n    const passwordCorrect = password.length >= passwordLength;\n\n    const verifiedEmail = () => {\n      const result = /\\S+@\\S+\\.\\S+/;\n      return result.test(email);\n    };\n\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"WALLET\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: require('./gifWallet.gif'),\n      alt: \"wallet\",\n      className: \"wallet-gif\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input-form\",\n      placeholder: \"E-mail\",\n      type: \"text\",\n      name: \"email\",\n      \"data-testid\": \"email-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input-form\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      \"data-testid\": \"password-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-login\",\n      type: \"submit\",\n      disabled: !(verifiedEmail() && passwordCorrect),\n      onClick: this.onSubmitLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Entrar\"));\n  }\n\n}\n\nLogin.propTypes = {\n  getEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getEmail: email => dispatch(saveEmail(email)),\n  getImg: img => dispatch(saveImage(img))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/projectWallet/src/pages/Login.js"],"names":["React","PropTypes","connect","saveEmail","saveImage","Login","Component","constructor","state","email","password","img","onSubmitLogin","bind","handleChange","history","getEmail","props","push","target","name","value","setState","render","passwordLength","passwordCorrect","length","verifiedEmail","result","test","require","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch","getImg"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { saveEmail, saveImage } from '../actions';\nimport '../css/main.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n      img: '',\n    };\n\n    this.onSubmitLogin = this.onSubmitLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onSubmitLogin() {\n    const { history, getEmail } = this.props;\n    const { email, img } = this.state;\n    getEmail(email);\n    history.push('/carteira');\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { email, password } = this.state;\n    const passwordLength = 6;\n    const passwordCorrect = password.length >= passwordLength;\n    const verifiedEmail = () => {\n      const result = /\\S+@\\S+\\.\\S+/;\n      return result.test(email);\n    };\n\n    return (\n      <main className=\"login-form\">\n        <span className=\"title\">WALLET</span>\n        <img src={ require('./gifWallet.gif') } alt=\"wallet\" className=\"wallet-gif\" />\n        <input\n          className=\"input-form\"\n          placeholder=\"E-mail\"\n          type=\"text\"\n          name=\"email\"\n          data-testid=\"email-input\"\n          onChange={ this.handleChange }\n        />\n        <input\n          className=\"input-form\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          data-testid=\"password-input\"\n          onChange={ this.handleChange }\n        />\n        <button\n          className=\"button-login\"\n          type=\"submit\"\n          disabled={ !(verifiedEmail() && passwordCorrect) }\n          onClick={ this.onSubmitLogin }\n        >\n          Entrar\n        </button>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  getEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getEmail: (email) => dispatch(saveEmail(email)),\n  getImg: (img) => dispatch(saveImage(img)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}