{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/projectWallet/src/components/ContentItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import Button from 'react-bootstrap/Button';\n\nimport { BiTrash, BiEditAlt } from 'react-icons/bi';\nimport { refreshItems } from '../actions'; // import { addExpense, convertValue, refreshItems } from '../actions';\n\nclass ContentItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getCurrencyName = this.getCurrencyName.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  getCurrencyName(exchangeRates, currency) {\n    const {\n      name\n    } = exchangeRates[currency];\n    return name.split('/')[0];\n  }\n\n  getRate(exchangeRates, currency) {\n    const {\n      ask\n    } = exchangeRates[currency];\n    return ask;\n  }\n\n  getConvertedValue(rate, value) {\n    const total = Number(rate) * Number(value);\n    const valueTotal = Math.round((total + Number.EPSILON) * 100) / 100;\n    return valueTotal;\n  }\n\n  deleteItem(expense) {\n    const {\n      expenses,\n      replaceExpenses\n    } = this.props;\n    const index = expenses.indexOf(expense);\n    const newExpenses = [...expenses];\n    newExpenses.splice(index, 1); // newExpenses = newExpenses.map((expense, i) => ({ ...expense, id: i }));\n\n    replaceExpenses(newExpenses);\n  }\n\n  render() {\n    const {\n      expense\n    } = this.props;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates\n    } = expense;\n    const currencyName = this.getCurrencyName(exchangeRates, currency);\n    const rate = this.getRate(exchangeRates, currency);\n    const convertedValue = this.getConvertedValue(rate, value);\n    const roundedRate = Math.round(rate * 100) / 100;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"table-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"cedula\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, tag), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, method), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, `${value}`), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, currencyName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, `${roundedRate}`), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, `${convertedValue}`), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"delete-btn\",\n      className: \"button-delete\",\n      onClick: this.deleteItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BiTrash, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"edit-btn\",\n      className: \"button-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BiEditAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  replaceExpenses: payload => dispatch(refreshItems(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentItem);","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/projectWallet/src/components/ContentItem.js"],"names":["React","connect","BiTrash","BiEditAlt","refreshItems","ContentItem","Component","constructor","props","getCurrencyName","bind","deleteItem","exchangeRates","currency","name","split","getRate","ask","getConvertedValue","rate","value","total","Number","valueTotal","Math","round","EPSILON","expense","expenses","replaceExpenses","index","indexOf","newExpenses","splice","render","description","method","tag","currencyName","convertedValue","roundedRate","mapStateToProps","state","wallet","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import Button from 'react-bootstrap/Button';\nimport { BiTrash, BiEditAlt } from 'react-icons/bi';\nimport { refreshItems } from '../actions';\n// import { addExpense, convertValue, refreshItems } from '../actions';\n\nclass ContentItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getCurrencyName = this.getCurrencyName.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  getCurrencyName(exchangeRates, currency) {\n    const { name } = exchangeRates[currency];\n    return name.split('/')[0];\n  }\n\n  getRate(exchangeRates, currency) {\n    const { ask } = exchangeRates[currency];\n    return ask;\n  }\n\n  getConvertedValue(rate, value) {\n    const total = Number(rate) * Number(value);\n    const valueTotal = Math.round((total + Number.EPSILON) * 100) / 100;\n    return valueTotal;\n  }\n\n  deleteItem(expense) {\n    const { expenses, replaceExpenses } = this.props;\n    const index = expenses.indexOf(expense);\n    const newExpenses = [...expenses];\n    newExpenses.splice(index, 1);\n    // newExpenses = newExpenses.map((expense, i) => ({ ...expense, id: i }));\n    replaceExpenses(newExpenses);\n  }\n\n\n  render() {\n    const { expense } = this.props;\n    const { value, description, currency, method, tag, exchangeRates } = expense;\n    const currencyName = this.getCurrencyName(exchangeRates, currency);\n    const rate = this.getRate(exchangeRates, currency);\n    const convertedValue = this.getConvertedValue(rate, value);\n    const roundedRate = Math.round((rate) * 100) / 100;\n\n    return (\n      <tr className=\"table-add\">\n        <td className=\"cedula\">{description}</td>\n        <td>{tag}</td>\n        <td>{method}</td>\n        <td>{`${value}`}</td>\n        <td>{currencyName}</td>\n        <td>{`${roundedRate}`}</td>\n        <td>{`${convertedValue}`}</td>\n        <td>Real</td>\n        <td>\n          <button\n            type=\"button\"\n            data-testid=\"delete-btn\"\n            className=\"button-delete\"\n            onClick={ this.deleteItem }\n          >\n            <BiTrash />\n          </button>\n          <button \n            type=\"button\"\n            data-testid=\"edit-btn\"\n            className=\"button-edit\"\n          >\n           <BiEditAlt />\n          </button>\n        </td>\n      </tr>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  replaceExpenses: (payload) => dispatch(refreshItems(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentItem);"]},"metadata":{},"sourceType":"module"}